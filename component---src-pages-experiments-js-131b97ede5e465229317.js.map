{"version":3,"file":"component---src-pages-experiments-js-131b97ede5e465229317.js","mappings":"yKAaA,I,UCFA,MAAMA,EAAW,CACf,CACEC,KAAM,OACNC,IAAK,KAEP,CACED,KAAM,QACNC,IAAK,UAEP,CACED,KAAM,cACNC,IAAK,gBAEP,CACED,KAAM,UACNC,IAAK,aA+BT,MA1Be,IAAiB,IAAhB,SAACC,GAAS,EACxB,OACE,8BAGE,uBAAKC,UAAU,SACb,uBAAKA,UAAU,oCAGb,uBAAKA,UAAU,mDAEfJ,EAASK,KAAI,CAACC,EAAMC,EAAGC,IACjB,wBAAMC,IAAKH,EAAKL,MACd,gBAAC,KAAI,CAACG,UAAWD,GAAYG,EAAKL,KAAO,sBAAwB,kBAAmBS,GAAIJ,EAAKJ,KAAMI,EAAKL,MACtGM,EAAI,IAAMC,EAAIG,QAAY,4BAAM,aAQvC,EC3Bb,MAbe,IAA2B,IAA1B,SAACR,EAAQ,SAAES,GAAS,EAClC,OACE,uBAAKR,UAAU,0CACb,gBAAC,EAAM,CAACD,SAAUA,IAClB,wBAAMC,UAAU,sBAAsBQ,GACtC,0BAAQR,UAAU,8BAChB,4BAAM,WACN,gBAAC,KAAI,CAACA,UAAU,kBAAkBM,GAAI,sBAAsB,WAE1D,C,sDCfV,MAAMG,EAAa,IAAkD,IAAjD,YAACC,EAAW,MAAEC,EAAK,SAAEC,EAAQ,YAAEC,GAAY,EAI3D,OACI,uBAAKb,UAAU,qEAEX,uBAAKA,UAAU,iBACX,qBAAGA,UAAU,oBAAoBU,GACjC,qBAAGV,UAAU,2BAA2BW,IAK5C,uBAAKX,UAAU,iBACX,qBAAGA,UAAU,IAAIa,GACjB,qBAAGb,UAAU,IAAG,uBAElB,EA+Bd,UAxBwB,IAIpB,gBAAC,IAAM,CAACD,SAAS,QACf,uBAAKC,UAAU,gDACb,qBAAGA,UAAU,sBAAqB,eAMlC,uBAAKA,UAAU,aACX,gBAACS,EAAU,CAACC,YAAa,OAAQC,MAAO,qBAAsBE,YAAa,2FAC3E,gBAACJ,EAAU,CAACC,YAAa,SACzB,gBAACD,EAAU,CAACC,YAAa,SACzB,gBAACD,EAAU,CAACC,YAAa,W","sources":["webpack://first-gatsby-site/./src/components/SLink.js","webpack://first-gatsby-site/./src/components/navbar.js","webpack://first-gatsby-site/./src/components/layout.js","webpack://first-gatsby-site/./src/pages/experiments.js"],"sourcesContent":["/**\r\n * Styled underlined link which heads over to a new place\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\n// main page component that user lands on\r\nconst SLink = ({children}) => {\r\n  return(\r\n    <a className=\"hover:underline\">{children}</a>\r\n  )\r\n}\r\n\r\nexport default SLink;\r\n","/**\r\n * Navbar component that provides site navigation to pages using a graphql query.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport SLink from './SLink';\r\nimport { Link } from 'gatsby';\r\n\r\n// Inspired by https://github.com/64bitpandas/bencuan.me/blob/main/src/components/header.js\r\n// Used the little hack: (i + 1 !== row.length)\r\n// Store a name which is displayed on the navbar along with the url to link to\r\nconst barLinks = [\r\n  {\r\n    name: \"home\",\r\n    url: \"/\"\r\n  },\r\n  {\r\n    name: \"about\",\r\n    url: \"/about\"\r\n  },\r\n  {\r\n    name: \"experiments\",\r\n    url: \"/experiments\"\r\n  },\r\n  {\r\n    name: \"contact\",\r\n    url: \"/contact\"\r\n  }\r\n]\r\n\r\n// main page component that user lands on\r\nconst Navbar = ({currPage}) => {\r\n  return(\r\n    <header>\r\n      {/* Use a flex bar\r\n      */}\r\n      <nav className=' py-5'>\r\n        <div className='flex justify-center items-center'>\r\n          {/* Add each item in the flex container */}\r\n\r\n          <div className='flex-none font-semibold text-lg md:text-xl px-6'>\r\n          {\r\n          barLinks.map((link, i, row) => (\r\n                <span key={link.name}>\r\n                  <Link className={currPage == link.name ? 'font-bold underline' : 'hover:underline'} to={link.url}>{link.name}</Link>\r\n                  {(i + 1 !== row.length) && (<span>&nbsp;|&nbsp;</span>)}\r\n                </span>\r\n          ))\r\n          }\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","/**\r\n * Layout component that provides every\r\n * pages layout across the site. \r\n * \r\n * Uses a children prop to show the page. \r\n * \r\n */\r\n\r\nimport * as React from 'react';\r\nimport Navbar from './navbar';\r\nimport { Link } from 'gatsby';\r\n\r\n// main page component that user lands on\r\nconst Layout = ({currPage, children}) => {\r\n  return(\r\n    <div className='flex flex-col h-dvh w-dvw bg-stone-100'>\r\n      <Navbar currPage={currPage}></Navbar>\r\n      <main className='flex h-full w-full'>{children}</main>\r\n      <footer className='font-light flex px-5 my-10'>\r\n        <span>2024 |&nbsp;</span>\r\n        <Link className='hover:underline' to={\"https:/github.com/\"}>source</Link>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Layout from '../components/layout';\r\n\r\n// attempted to create the design of the projects page here: https://www.shiyunlu.com/projects/\r\n\r\nconst Experiment = ({projectDate, title, techTags, description}) => {\r\n\r\n    \r\n\r\n    return(\r\n        <div className='w-full p-6 border-gray-200 divide-y divide-dashed divide-zinc-600'>\r\n            {/* Div that contains the flex sideways within the card */}\r\n            <div className='flex flex-row'>\r\n                <p className='font-medium py-2'>{projectDate}</p>\r\n                <p className='font-bold px-6 text-2xl'>{title}</p>\r\n                {/* <p className='bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-2 border border-blue-500 hover:border-transparent text-sm'>Vercel</p> */}\r\n            </div>\r\n\r\n            {/* Div that contains the information and image to stack below inside the card */}\r\n            <div className='flex flex-col'>\r\n                <p className=''>{description}</p>\r\n                <p className=''>Project Image Here</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n// main page component that user lands on\r\nconst ExperimentsPage = () => {\r\n\r\n\r\n  return(\r\n    <Layout currPage='home'>\r\n      <div className='bg-stone-100 flex flex-col grow items-center'>\r\n        <p className='font-bold text-6xl'>experiments</p>\r\n        {/* \r\n        Create a grid(column stacking) that contains every project from the DB? \r\n        Date, Title, Tech tags, line/information, image\r\n        \r\n        */}\r\n        <div className='columns-1'>\r\n            <Experiment projectDate={'2023'} title={'Personal Portfolio'} description={'This is my new description. I made this portfolio in order to learn a bit of tailwind.'}></Experiment>\r\n            <Experiment projectDate={'2023'}></Experiment>\r\n            <Experiment projectDate={'2023'}></Experiment>\r\n            <Experiment projectDate={'2023'}></Experiment>\r\n        </div>\r\n\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ExperimentsPage;"],"names":["barLinks","name","url","currPage","className","map","link","i","row","key","to","length","children","Experiment","projectDate","title","techTags","description"],"sourceRoot":""}